version: '3.8'

services:
  # MongoDB Database
  mongo:
    image: mongo:7.0
    container_name: legal-ai-mongo
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: legal_ai
    volumes:
      - mongo_data:/data/db
      - ./database/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - legal-ai-network

  # Backend Flask API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: legal-ai-backend
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      FLASK_ENV: development
      MONGODB_URI: mongodb://admin:password123@mongo:27017/legal_ai?authSource=admin
      AI_SERVICE_URL: http://ai-service:8000
    depends_on:
      - mongo
      - ai-service
    volumes:
      - ./backend:/app
    networks:
      - legal-ai-network

  # AI Microservice
  ai-service:
    build:
      context: ./ai-service
      dockerfile: Dockerfile
    container_name: legal-ai-service
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      PYTHONUNBUFFERED: 1
    volumes:
      - ./ai-service:/app
      - ./ai-service/data:/app/data
    networks:
      - legal-ai-network

  # Frontend Next.js
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: legal-ai-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:5000/api
      NEXT_PUBLIC_AI_SERVICE_URL: http://localhost:8000
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    networks:
      - legal-ai-network

networks:
  legal-ai-network:
    driver: bridge

volumes:
  mongo_data: